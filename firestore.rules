rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isTeamMember(teamData) {
      let members = teamData.members;
      return isSignedIn() && 
        members.hasAny([{'uid': request.auth.uid}]);
    }
    
    function isTeamCaptain(teamData) {
      let members = teamData.members;
      return isSignedIn() &&
        members.hasAny([{'uid': request.auth.uid, 'role': 'captain'}]);
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if user is signed in
      allow read: if isSignedIn();
      
      // Allow create if user is creating their own document
      allow create: if isSignedIn() && 
        userId == request.auth.uid;
      
      // Allow update if user is updating their own document
      allow update: if isSignedIn() && 
        userId == request.auth.uid;
      
      // Allow delete if user is deleting their own document
      allow delete: if isSignedIn() && 
        userId == request.auth.uid;
    }

    // Teams collection rules
    match /teams/{teamId} {
      // Allow read if user is signed in
      allow read: if isSignedIn();
      
      // Allow create if user is signed in
      allow create: if isSignedIn();
      
      // Allow update if user is team member
      allow update: if isSignedIn() && isTeamMember(resource.data);
      
      // Allow delete if user is auth
      allow delete: if isSignedIn() 
    }
  }
} 